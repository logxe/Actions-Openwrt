#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build AP8220 ImmortalWrt with NSS

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
      inputs:
        upload_release:
          description: 'Upload Release?'
          required: false
          default: 'false'


env:
  REPO_URL: https://github.com/VIKINGYFY/immortalwrt
  REPO_BRANCH: main
  DEVICE_NAME: zn_m2
  FEEDS_CONF: feeds.conf.default
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install zstd
        sudo -E apt-get -qq install $(curl -fsSL https://tinyurl.com/ubuntu2204-make-openwrt)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo -E git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /mnt/workdir
        sudo chown $USER:$GROUPS /mnt/workdir

    - name: Clone source code
      working-directory: /mnt/workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /mnt/workdir/openwrt $GITHUB_WORKSPACE/openwrt

#    - name: Load custom feeds
#      run: |
#        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
#        chmod +x $DIY_P1_SH
#        cd openwrt
#        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update & Install feeds
      run: |
        cd openwrt && ./scripts/feeds update -a && ./scripts/feeds install -a
        
    - name: Custom Prebuild Toolchain
      run: |
        cd openwrt
        wget https://downloads.immortalwrt.org/releases/24.10.0/targets/qualcommax/ipq807x/immortalwrt-toolchain-24.10.0-qualcommax-ipq807x_gcc-13.3.0_musl.Linux-x86_64.tar.zst
        tar axf immortalwrt-toolchain-24.10.0-qualcommax-ipq807x_gcc-13.3.0_musl.Linux-x86_64.tar.zst
        rm immortalwrt-toolchain-24.10.0-qualcommax-ipq807x_gcc-13.3.0_musl.Linux-x86_64.tar.zst
        ./scripts/ext-toolchain.sh --toolchain /mnt/workdir/openwrt/immortalwrt-toolchain-24.10.0-qualcommax-ipq807x_gcc-13.3.0_musl.Linux-x86_64/toolchain-aarch64_cortex-a53_gcc-13.3.0_musl/ --config qualcommax/ipq807x

    - name: Remove wireless config
      run: |
        cd openwrt  
        sed -i \
        -e '/CONFIG_PACKAGE_ath11k-firmware-ipq8074=y/c\# CONFIG_PACKAGE_ath11k-firmware-ipq8074 is not set' \
        -e '/CONFIG_PACKAGE_kmod-ath=y/c\# CONFIG_PACKAGE_kmod-ath is not set' \
        -e '/CONFIG_PACKAGE_kmod-ath11k=y/c\# CONFIG_PACKAGE_kmod-ath11k is not set' \
        -e '/ATH11K_NSS_SUPPORT=y/c\# CONFIG_ATH11K_NSS_SUPPORT is not set' \
        -e '/CONFIG_PACKAGE_kmod-ath11k-ahb=y/c\# CONFIG_PACKAGE_kmod-ath11k-ahb is not set' \
        -e '/CONFIG_PACKAGE_kmod-ath11k-pci=y/c\# CONFIG_PACKAGE_kmod-ath11k-pci is not set' \
        -e '/CONFIG_PACKAGE_kmod-cfg80211=y/c\# CONFIG_PACKAGE_kmod-cfg80211 is not set' \
        -e '/CONFIG_PACKAGE_kmod-mac80211=y/c\# CONFIG_PACKAGE_kmod-mac80211 is not set' \
        -e '/CONFIG_PACKAGE_hostapd-common=y/c\# CONFIG_PACKAGE_hostapd-common is not set' \
        -e '/CONFIG_PACKAGE_wpad-openssl=y/c\# CONFIG_PACKAGE_wpad-openssl is not set' \
        -e '/CONFIG_PACKAGE_wifi-scripts=y/c\# CONFIG_PACKAGE_wifi-scripts is not set' \
        -e '/CONFIG_PACKAGE_wireless-regdb=y/c\# CONFIG_PACKAGE_wireless-regdb is not set' \
        .config

    - name: Load custom configuration
      run: |
        chmod +x $DIY_P2_SH
        cd openwrt
        tee -a .config > /dev/null <<EOT
        CONFIG_PACKAGE_luci-app-accesscontrol=y
        CONFIG_PACKAGE_luci-app-ddns=y
        CONFIG_PACKAGE_luci-app-frpc=y
        CONFIG_PACKAGE_luci-app-passwall=y
        # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Haproxy is not set
        # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Hysteria is not set
        # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_NaiveProxy is not set
        # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Rust_Client is not set
        # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Rust_Server is not set
        # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Simple_Obfs is not set
        # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_SingBox is not set
        # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_tuic_client is not set
        # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray_Geodata is not set
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray_Geoview=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray_Plugin=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Xray=y
        # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Xray_Plugin is not set
        CONFIG_PACKAGE_luci-app-smartdns=y
        CONFIG_PACKAGE_luci-app-upnp=y
        CONFIG_PACKAGE_luci-proto-wireguard=y
        CONFIG_PACKAGE_bind-dig=y
        CONFIG_PACKAGE_ddns-scripts-cloudflare=y
        CONFIG_PACKAGE_coremark=y
        CONFIG_PACKAGE_iperf3=y
        CONFIG_PACKAGE_qrencode=y
        EOT
        $GITHUB_WORKSPACE/$DIY_P2_SH
        sed -i 's/192.168.[0-9].1/192.168.2.1/g' package/base-files/files/bin/config_generate
        make defconfig

    - name: Download package
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        echo "FILE_DATE=$(date +"%Y%m%d")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin-${{ env.DEVICE_NAME }}-${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: immortalwrt-${{ env.DEVICE_NAME }}-${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: github.event.inputs.upload_release == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d")" >> $GITHUB_OUTPUT
        echo "status=success" >> $GITHUB_OUTPUT
        touch release.txt
        echo "## Aliyun AP8220" >> release.txt
        md5sum ${{ env.FIRMWARE }}/* | awk -F'[ /]' '{print$14" "$1}' >> release.txt
        cat release.txt

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: |
          ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 30
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.1
      if: github.event.inputs.upload_release == 'true' && !cancelled()
      with:
        keep_latest: 10
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
